version: "{build}"
clone_depth: 10

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: 15
      ARCH: amd64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VS_VERSION: 14
      ARCH: amd64
    - VS_VERSION: 12
      ARCH: amd64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: 15
      ARCH: x86
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VS_VERSION: 14
      ARCH: x86
    - VS_VERSION: 12
      ARCH: x86

init:
  - ps: Set-WinSystemLocale ja-JP
  - ps: Start-Sleep -s 10
  - ps: Restart-Computer

install:
  - if "%VS_VERSION%" == "15" if "%ARCH%" == "x86" set VS2017_X86=TRUE
  - if "%VS_VERSION%" == "15" if "%ARCH%" == "amd64" set VS2017_AMD64=TRUE
  - if "%VS2017_X86%" == "TRUE"
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%VS2017_AMD64%" == "TRUE"
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if not "%VS_VERSION%" == "15"
      call
      "C:\Program Files (x86)\Microsoft Visual Studio %VS_VERSION%.0\VC\vcvarsall.bat"
      %ARCH%
  - set INSTALL_FOLDER_NAME=install
  - ps: $Env:TEST_INSTALL_FOLDER = (Join-Path $Env:APPVEYOR_BUILD_FOLDER $Env:INSTALL_FOLDER_NAME)

build_script:
  - set CMAKE_GENERATOR_NAME=Visual Studio %VS_VERSION%
  - if "%VS_VERSION%" == "15"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2017
  - if "%ARCH%" == "amd64"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% Win64
  - set
  - cmake . -G "%CMAKE_GENERATOR_NAME%"
      -DCMAKE_INSTALL_PREFIX=%TEST_INSTALL_FOLDER%
  - cmake --build . --config RelWithDebInfo
  - cmake --build . --config RelWithDebInfo --target Install

on_success:
  - if "%VS_VERSION%" == "15"
      set /p REDIST_VERSION=<"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\Microsoft.VCRedistVersion.default.txt";
  - if "%ARCH%" == "amd64" set ARCH=x64
  - ps: |
      if ($Env:VS_VERSION -eq "15") { 
        $Env:VCREDIST_VCRUNTIME = "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\$Env:REDIST_VERSION\$Env:ARCH\Microsoft.VC141.CRT\vcruntime140.dll"
        $Env:VCREDIST_MSVCP = "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\$Env:REDIST_VERSION\$Env:ARCH\Microsoft.VC141.CRT\msvcp140.dll"
      }
      if ($Env:VS_VERSION -eq "14") {
        $Env:VCREDIST_VCRUNTIME = "C:\Program Files (x86)\Microsoft Visual Studio {$Env:VS_VERSION}.0\VC\redist\{$Env:ARCH}\Microsoft.VC140.CRT\vcruntime140.dll"
        $Env:VCREDIST_MSVCP = "C:\Program Files (x86)\Microsoft Visual Studio {$Env:VS_VERSION}.0\VC\redist\{$Env:ARCH}\Microsoft.VC140.CRT\msvcp140.dll"
      }
      if ($Env:VS_VERSION  -eq "12") {
        $Env:VCREDIST_VCRUNTIME="C:\Program Files (x86)\Microsoft Visual Studio {$Env:VS_VERSION}.0\VC\redist\{$Env:ARCH}\Microsoft.VC120.CRT\msvcr120.dll"
        $Env:VCREDIST_MSVCP = "C:\Program Files (x86)\Microsoft Visual Studio {$Env:VS_VERSION}.0\VC\redist\{$Env:ARCH}\Microsoft.VC120.CRT\msvcp120.dll"
      }
  - set
  - xcopy %VCREDIST_VCRUNTIME% %TEST_INSTALL_FOLDER%
  - xcopy %VCREDIST_MSVCP% %TEST_INSTALL_FOLDER%
  - set ARTIFACT=%TEST_INSTALL_FOLDER%-vcruntime.zip
  - 7z a %ARTIFACT% %TEST_INSTALL_FOLDER%
  - ps: Push-AppveyorArtifact $Env:ARTIFACT
  - cd ..

on_failure:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
